name: Run Scandium Script

on:
  workflow_dispatch:  # Only manual trigger of the workflow
    inputs:
      starting_url:
        description: 'Starting URL for the tests'
        required: false
        type: string
        default: ''
      environment:
        description: 'Select the test environment to run'
        required: true
        type: choice
        options:
          - Testing
          - Production

jobs:
  execute-scandium-script:
    runs-on: ubuntu-latest

    env:
      API_TOKEN: ${{ secrets.API_TOKEN }}
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      HUB_URL: ${{ secrets.HUB_URL }}
      STARTING_URL: ${{ inputs.starting_url }}
      BROWSER: chrome
      SCREENSHOT: true
      VARIABLES: '{}'
      RETRY: 0
      MAX_ATTEMPTS: 30
      WAIT_PERIOD: 3

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Ensure Scandium Script is Executable
        run: chmod +x scandium_script.sh

      - name: Map Environment to Suite ID
        run: |
          if [ "${{ inputs.environment }}" = "Testing" ]; then
            echo "SUITE_ID=9f851856-fee4-4030-8247-06257c174f42" >> $GITHUB_ENV
            echo "Selected Testing environment with suite ID: 9f851856-fee4-4030-8247-06257c174f42"
          elif [ "${{ inputs.environment }}" = "Production" ]; then
            echo "SUITE_ID=9f810514-576d-41b4-bfd8-f832ae831cf9" >> $GITHUB_ENV
            echo "Selected Production environment with suite ID: 9f810514-576d-41b4-bfd8-f832ae831cf9"
          else
            echo "Error: Invalid environment selected"
            exit 1
          fi

      - name: Run the Scandium Script
        run: |
          ./scandium_script.sh 2>&1 | tee scandium_output.log
        id: run-tests

      - name: Send Enhanced Email via Gmail SMTP
        run: |
          GMAIL_USERNAME=${{ secrets.GMAIL_USERNAME }}
          GMAIL_APP_PASSWORD=${{ secrets.GMAIL_APP_PASSWORD }}
          EMAIL_TO=${{ secrets.EMAIL_TO }}

          # Send email using the exact same curl command that works
          curl -v --mail-from "$EMAIL_FROM" \
              --mail-rcpt "$EMAIL_TO" \
              --upload-file test_result.txt \
              --ssl-reqd \
              --user "$GMAIL_USERNAME:$GMAIL_APP_PASSWORD" \
              smtp://smtp.gmail.com:587

      - name: Save Email Content as Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: scandium-email-content
          path: |
            email_content.html
            email_subject.txt
            email_message.txt
            failed_tests.html
            scandium_output.log

      - name: Cleanup Temporary Files
        if: always()
        run: |
          rm -f temp_results.json temp_steps.json
          echo "ðŸ§¹ Temporary processing files cleaned up"