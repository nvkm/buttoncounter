name: Run Scandium Script

on:
  workflow_dispatch:  # Only manual trigger of the workflow
    inputs:
      starting_url:
        description: 'Starting URL for the tests'
        required: false
        type: string
        default: ''
      environment:
        description: 'Select the test environment to run'
        required: true
        type: choice
        options:
          - Testing
          - Production

jobs:
  execute-scandium-script:
    runs-on: ubuntu-latest

    env:
      API_TOKEN: ${{ secrets.API_TOKEN }}
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      HUB_URL: ${{ secrets.HUB_URL }}
      STARTING_URL: ${{ inputs.starting_url }}
      BROWSER: chrome
      SCREENSHOT: true
      VARIABLES: '{}'
      RETRY: 0
      MAX_ATTEMPTS: 30
      WAIT_PERIOD: 3

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Ensure Scandium Script is Executable
        run: chmod +x scandium_script.sh

      - name: Map Environment to Suite ID
        run: |
          if [ "${{ inputs.environment }}" = "Testing" ]; then
            echo "SUITE_ID=9f851856-fee4-4030-8247-06257c174f42" >> $GITHUB_ENV
            echo "Selected Testing environment with suite ID: 9f851856-fee4-4030-8247-06257c174f42"
          elif [ "${{ inputs.environment }}" = "Production" ]; then
            echo "SUITE_ID=9f810514-576d-41b4-bfd8-f832ae831cf9" >> $GITHUB_ENV
            echo "Selected Production environment with suite ID: 9f810514-576d-41b4-bfd8-f832ae831cf9"
          else
            echo "Error: Invalid environment selected"
            exit 1
          fi

      - name: Run the Scandium Script
        run: |
          ./scandium_script.sh 2>&1 | tee scandium_output.log
        id: run-tests

      - name: Send Scandium Result Email
        run: |
          GMAIL_USERNAME="${{ secrets.GMAIL_USERNAME }}"
          GMAIL_APP_PASSWORD="${{ secrets.GMAIL_APP_PASSWORD }}"
          EMAIL_FROM="${{ secrets.GMAIL_USERNAME }}"
          EMAIL_TO="${{ secrets.EMAIL_TO }}"
          SUBJECT="Scandium Test Result - ${{ inputs.environment }}"
          BOUNDARY="ZZ_$(date +%s)_ZZ"
      
          FINAL_LINE=$(grep -oP 'Raw response for execution ID [^:]+: \K\{.*' scandium_output.log | tail -n 1)
      
          if [ -z "$FINAL_LINE" ]; then
            echo "No test results available." > body.txt
          else
            echo "$FINAL_LINE" > parsed_result.json
      
            jq -r '
              "Hello,\n\nThe latest Scandium test run has completed with the following result:\n\n━━━━━━━━━━━━━━━━━━━━━━━" +
              "\n🧪 Test Suite: \(.data.name)" +
              "\n📊 Status: \(.data.status | ascii_downcase | if . == "error" then "❌ ERROR" else . end)" +
              "\n💻 Browser: \(.data.browser) \(.data.browser_version)" +
              "\n🖥 OS: \(.data.operating_system) (\(.data.operating_system_version))" +
              "\n\n━━━━━━━━━━━━━━━━━━━━━━━" +
              "\n🔍 Test Case: \(.data.results[0].name)" +
              "\n⏱ Duration: \((.data.results[0].duration / 1000.0) | tostring) seconds" +
              "\n📈 Summary: \(.data.results[0].summary.passed) Passed / \(.data.results[0].summary.total) Total" +
              "\n📉 Status: ❌ \(.data.results[0].status | ascii_upcase)" +
              "\n🧾 Reason: \(.data.results[0].reason // "N/A")" +
              "\n\n━━━━━━━━━━━━━━━━━━━━━━━" +
              "\n📋 Step Breakdown:\n" +
              (.data.results[0].test_runs | map(
                "  \((.status == "error")? "❌" : "✅") \(.title) (\((.time_taken / 1000.0) | tostring)s)" +
                (if .status == "error" then
                  "\n   ┗ Error: \(.error // "Unknown")" +
                  (if .result_screenshot.imageData then
                    "\n   ┗ 📸 Screenshot: \(.result_screenshot.imageData)"
                  else "" end)
                else "" end)
              ) | join("\n")) +
              "\n\n━━━━━━━━━━━━━━━━━━━━━━━\n\nThe complete execution log is attached.\n\nBest regards,\nScandium CI Bot"
            ' parsed_result.json > body.txt
          fi
      
          {
            echo "From: $EMAIL_FROM"
            echo "To: $EMAIL_TO"
            echo "Subject: $SUBJECT"
            echo "MIME-Version: 1.0"
            echo "Content-Type: multipart/mixed; boundary=\"$BOUNDARY\""
            echo
            echo "--$BOUNDARY"
            echo "Content-Type: text/plain; charset=utf-8"
            echo "Content-Transfer-Encoding: 7bit"
            echo
            cat body.txt
            echo
            echo "--$BOUNDARY"
            echo "Content-Type: text/plain"
            echo "Content-Disposition: attachment; filename=\"scandium_output.log\""
            echo
            cat scandium_output.log
            echo
            echo "--$BOUNDARY--"
          } > email_content.txt
      
          curl -s --ssl-reqd \
            --url smtp://smtp.gmail.com:587 \
            --user "$GMAIL_USERNAME:$GMAIL_APP_PASSWORD" \
            --mail-from "$EMAIL_FROM" \
            --mail-rcpt "$EMAIL_TO" \
            --upload-file email_content.txt