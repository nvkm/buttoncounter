name: Run Scandium Script

on:
  workflow_dispatch:  # Only manual trigger of the workflow
    inputs:
      starting_url:
        description: 'Starting URL for the tests'
        required: false
        type: string
        default: ''
      environment:
        description: 'Select the test environment to run'
        required: true
        type: choice
        options:
          - Testing
          - Production

jobs:
  execute-scandium-script:
    runs-on: ubuntu-latest

    env:
      API_TOKEN: ${{ secrets.API_TOKEN }}
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      HUB_URL: ${{ secrets.HUB_URL }}
      STARTING_URL: ${{ inputs.starting_url }}
      BROWSER: chrome
      SCREENSHOT: true
      VARIABLES: '{}'
      RETRY: 0
      MAX_ATTEMPTS: 30
      WAIT_PERIOD: 3

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Ensure Scandium Script is Executable
        run: chmod +x scandium_script.sh

      - name: Map Environment to Suite ID
        run: |
          if [ "${{ inputs.environment }}" = "Testing" ]; then
            echo "SUITE_ID=9f851856-fee4-4030-8247-06257c174f42" >> $GITHUB_ENV
            echo "Selected Testing environment with suite ID: 9f851856-fee4-4030-8247-06257c174f42"
          elif [ "${{ inputs.environment }}" = "Production" ]; then
            echo "SUITE_ID=9f810514-576d-41b4-bfd8-f832ae831cf9" >> $GITHUB_ENV
            echo "Selected Production environment with suite ID: 9f810514-576d-41b4-bfd8-f832ae831cf9"
          else
            echo "Error: Invalid environment selected"
            exit 1
          fi

      - name: Run the Scandium Script
        run: |
          ./scandium_script.sh 2>&1 | tee scandium_output.log
        id: run-tests
      
      - name: Send Scandium Result Email
        run: |
          GMAIL_USERNAME="${{ secrets.GMAIL_USERNAME }}"
          GMAIL_APP_PASSWORD="${{ secrets.GMAIL_APP_PASSWORD }}"
          EMAIL_FROM="${{ secrets.GMAIL_USERNAME }}"
          EMAIL_TO="${{ secrets.EMAIL_TO }}"
          SUBJECT="Scandium Test Result - ${{ inputs.environment }}"
          BOUNDARY="ZZ_$(date +%s)_ZZ"
      
          FINAL_LINE=$(grep -oP 'Raw response for execution ID [^:]+: \K\{.*' scandium_output.log | tail -n 1)
          echo "$FINAL_LINE" > parsed_result.json
      
          STATUS=$(jq -r '.data.status' parsed_result.json)
          NAME=$(jq -r '.data.name' parsed_result.json)
          BROWSER=$(jq -r '.data.browser' parsed_result.json)
          OS=$(jq -r '.data.operating_system' parsed_result.json)
          DURATION_MS=$(jq -r '.data.duration' parsed_result.json)
          DURATION_SEC=$((DURATION_MS / 1000))
          SUMMARY=$(jq -r '.data.summary' parsed_result.json)
      
          TEST_NAME=$(jq -r '.data.results[0].name' parsed_result.json)
          TEST_STATUS=$(jq -r '.data.results[0].status' parsed_result.json)
          TEST_REASON=$(jq -r '.data.results[0].reason // "N/A"' parsed_result.json)
      
          if [ "$STATUS" == "success" ]; then
            BODY_TEXT="✅ *Test Passed*
          
          Test Suite: $NAME
          Test Name: $TEST_NAME
          Environment: ${{ inputs.environment }}
          Browser: $BROWSER
          OS: $OS
          Total Duration: ${DURATION_SEC}s
          Overall Status: ${STATUS^^}
          
          Summary: $SUMMARY"
              else
                FAILING_STEP=$(jq '.data.results[0].test_runs[] | select(.status == "error")' parsed_result.json)
                STEP_TITLE=$(echo "$FAILING_STEP" | jq -r '.title')
                STEP_ERROR=$(echo "$FAILING_STEP" | jq -r '.error')
                STEP_TIME=$(( $(echo "$FAILING_STEP" | jq -r '.time_taken') / 1000 ))
                STEP_SCREENSHOT=$(echo "$FAILING_STEP" | jq -r '.result_screenshot.imageData')
          
                BODY_TEXT="❌ *Test Failed*
          
          Test Suite: $NAME
          Test Name: $TEST_NAME
          Environment: ${{ inputs.environment }}
          Browser: $BROWSER
          OS: $OS
          Total Duration: ${DURATION_SEC}s
          Overall Status: ${STATUS^^}
          
          Summary: $SUMMARY
          
          Failed Step:
          - Title: $STEP_TITLE
          - Error: $STEP_ERROR
          - Duration: ${STEP_TIME}s
          - Screenshot: $STEP_SCREENSHOT"
              fi
      
          {
            echo "From: $EMAIL_FROM"
            echo "To: $EMAIL_TO"
            echo "Subject: $SUBJECT"
            echo "MIME-Version: 1.0"
            echo "Content-Type: multipart/mixed; boundary=\"$BOUNDARY\""
            echo
            echo "--$BOUNDARY"
            echo "Content-Type: text/plain; charset=utf-8"
            echo "Content-Transfer-Encoding: 7bit"
            echo
            echo "$BODY_TEXT"
            echo
            echo "--$BOUNDARY"
            echo "Content-Type: text/plain"
            echo "Content-Disposition: attachment; filename=\"scandium_output.log\""
            echo
            cat scandium_output.log
            echo
            echo "--$BOUNDARY--"
          } > email_content.txt
      
          curl -s --ssl-reqd \
            --url smtp://smtp.gmail.com:587 \
            --user "$GMAIL_USERNAME:$GMAIL_APP_PASSWORD" \
            --mail-from "$EMAIL_FROM" \
            --mail-rcpt "$EMAIL_TO" \
            --upload-file email_content.txt
      